require(dplyr)
require(rpart)
require(ggplot2)
require(stats)

setwd('C:/Users/xiaoji/Downloads/Translation_Test')
test = read.csv("test_table.csv")
user = read.csv("user_table.csv")

summary(test)
str(test)
test$date = as.Date(test$date)

#in the test table, browser_language : in browser or app settings, the language chosen by the user. It can
#be EN, ES, Other (Other means any language except for English and Spanish)conversion : whether the user 
#converted (1) or not (0). This is our label. A test is considered successful if it increases the proportion
#of users who convert. test : users are randomly split into test (1) and control (0). Test users see the new
#translation and control the old one. For Spain-based users, this is obviously always 0
#since there is no change there.

length(test$user_id) == length(unique(test$user_id))
#no duplicates in test table

length(test$user_id) == length(user$user_id)
#missing user info in either test or user table

length(test$user_id) - length(user$user_id)
#there are 454 more users' info in test table

data = merge(test, user, by.y = "user_id", all = TRUE)
summary(data)

x = table(data$conversion)
round(prop.table(x), digits = 3) #conversion rate is about 5%

y = table(data$test)
round(prop.table(y), digits = 3) #around 47.6% user had the test(see the new translation)

#check if it is true that Spain has a better conversion rate than other countries when using non-localized translation
#and arrange results in the descending order
data_conversion_country = data %>%
                  group_by (country) %>%
                 summarise (conversion_rate = mean(conversion[test == 0]))%>%
                 arrange(desc(conversion_rate))

head(data_conversion_country) #Looks like Spain does have a best conversion rate of 7.9%

ggplot(data = data_conversion_country, aes(x = country, y= conversion_rate)) +
  geom_bar(stat = "identity", aes(fill = country)) #and Argentina and Uruguay have the worst performance

#check if date has an influence on conversion rate

data_test_by_day = data %>%
                  group_by(date)%>%
                  summarize(test_vs_control = mean(conversion[test == 1])/mean(conversion[test == 0]))

qplot(date, test_vs_control, data = data_test_by_day, geom = "line")
